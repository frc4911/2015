package org.usfirst.frc.team4911.robot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;

import org.usfirst.frc.team4911.robot.Robot;
import org.usfirst.frc.team4911.robot.RobotConstants;
import org.usfirst.frc.team4911.robot.subsystems.SensorSystem;


public class Autonomous extends CommandGroup {
    private int mode = 8;//[1 - 9]
    //Case 1: Contaienr to auto - don't use yet
    //Case 2: Tote to auto - don't use yet
    //Case 3: Staging zone to auto zone - don't use yet
    //Case 4: Stacking three totes - PLEASE PLEASE PLEASE DO NOT USE!!!
    //Case 5: Move tote closest to auto zone - usable
    //Case 6: Move Container closest to auto zone
    //Case 7: Both Tote and the Container
    //Case 8: Two Containers
    //Case 9: None
	
    private SensorSystem sensorSystem = Robot.sensorSystem;

    public Autonomous(){
	addSequential(new ZeroYaw());
	switch(mode){
	case 1: 
    	    //////////////////////////////////////////////////////////////
    	    // 
    	    // 	Moving One Container To AutoZone
    	    //
    	    //	Start far Left, Ready to Grab the Container
    	    //////////////////////////////////////////////////////////////		
    	    addSequential(new CloseContainerClamp(0.25));
    	    addSequential(new MoveContainerLiftForTime(0.25, 0.5));
    	    addSequential(new DriveForTime(-0.3, 0, 4));
    	    break;
    				
    	case 2: 
    	    //////////////////////////////////////////////////////////////
    	    //  
    	    // 	Moving One Tote To AutoZone
    	    //
    	    // Start far Left, Ready to Grab the Tote
    	    //////////////////////////////////////////////////////////////
    	    addSequential(new MoveToteLiftForTime(0.5, 1.0));
    	    addSequential(new DriveForTime(-0.3, 0, 4));     
    	    break;
    		
    	case 3:
    	    //////////////////////////////////////////////////////////////
    	    // 
    	    // 	Drive From Staging Zone Around Scoring Zone to AutoZone
    	    //
    	    //////////////////////////////////////////////////////////////		
    	    //	NEED ENCODERS
    	    double stagingZones = 2.0;//What is the Unit? Why Double?
    	    addSequential(new PIDAxisDrive(-0.5, 0.0, RobotConstants.DRIVE_ONE_STAGE_ZONE * stagingZones));
    	    addSequential(new SetGoalHeading(90));
    	    addSequential(new PIDAxisDrive(0.0, 0.5,  1024.0*30.5*3.0));
    	    addSequential(new SetGoalHeading(0));
    	    addSequential(new PIDAxisDrive(0.5, 0.0, RobotConstants.DRIVE_ONE_STAGE_ZONE * (2.0-stagingZones)));
    	    break;
    				
    	case 4: 
    	    //////////////////////////////////////////////////////////////
    	    // 
    	    // 	Stacking Three Totes
    	    //
    	    //////////////////////////////////////////////////////////////
    	    // Start far Right between the Scoring Zone and the Staging Zone
    	    
    	    double liftSpeed = 1.0;
    	    double driveSpeed = 0.3;
    	    
    	    addSequential(new MoveToteLiftForTime(4.0, liftSpeed));//Lifting Tote
    	    addSequential(new DriveForTime(-0.5, 0.0, 2.25));//Moving to Next Tote
    	    addSequential(new MoveToteLiftForTime(2, -liftSpeed));//Releasing Tote
    	    addSequential(new DriveForTime(0.0, -driveSpeed, 1.0));//Backing Up
    	    addSequential(new MoveToteLiftForTime(2, -liftSpeed));//Lowering lift
    	    addSequential(new DriveForTime(0.0,driveSpeed, 1.0));//MovingForward
    	    
    	    //Re-Iterate
    	    addSequential(new MoveToteLiftForTime(4.0, liftSpeed));//Lifting Tote
    	    addSequential(new DriveForTime(-0.5, 0.0, 2.25));//Moving to Next Tote
    	    addSequential(new MoveToteLiftForTime(2, -liftSpeed));//Releasing Tote
    	    addSequential(new DriveForTime(0.0, -driveSpeed, 1.0));//Backing Up
    	    addSequential(new MoveToteLiftForTime(2, -liftSpeed));//Lowering lift
    	    addSequential(new DriveForTime(0.0,driveSpeed, 1.0));//MovingForwardd
    				
    			
    	    addSequential(new MoveToteLiftForTime(1.0, liftSpeed));//Lifting Tote slightly
    	    addSequential(new RotateForTime(1.20, -0.6)); // MAKE PID ROTATE
    	    //addSequential(new DriveForTime(0.0, -driveSpeed, 4.0));//Drive into Auto zone (field oriented)
    	    break;
    				
    	case 5:
    			    
    	    addSequential(new MoveToteLiftForTime(1.0, 1.0));
    	    addSequential(new RotateForTime(1.20, -0.6));
    	    addSequential(new DriveForTime(0.0, -1.0, 1.50));//2 sec is too long
    	    addSequential(new RotateForTime(1.20, 0.6));
    	    
    	    //addSequential(new MoveToteLiftForTime(1.0, -1.0));//Lower the Tote Lift
    	    break;
    			    
    	case 6:  
    	    //Container Auto
    	    addSequential(new CloseContainerClamp(1.0));
    	    addSequential(new MoveContainerLiftForTime(1.0, 1.0));
    	    //Robot does not turn enough for 1.2 seconds
    	    addSequential(new RotateForTime(1.5, 0.6));
    	    //2 sec is too long, but 1.5 is not enough
    	    addSequential(new DriveForTime(0.0, 1.0, 1.75));
    	    addSequential(new RotateForTime(1.50, -0.6));
    	    
    	    break;
    			    
    	case 7:
    
    	    //Grabbing Both the Tote and the Container
    	    addSequential(new MoveToteLiftForTime(1.0, 1.0));
    	    addSequential(new RotateForTime(1.5, -0.7));
    	    addSequential(new MoveContainerLiftForTime(3.5, -0.25));
    	    addSequential(new CloseContainerClamp(3.75));
    	    addSequential(new MoveContainerLiftForTime(0.8, 1.0));
    	    addSequential(new RotateForTime(0.6, 0.7));
    	    addSequential(new DriveForTime(0.0, -1.0, 1.75));
    	    break;
    			    
    	case 8:

    	    /*addSequential(new MoveToteLiftForTime(2.5, 1.0));
    	    addSequential(new DriveForTime(-0.5, 0.0, 1.15));
    	    addSequential(new RotateForTime(1.0, -0.7));
    	    addSequential(new SetGoalHeading(sensorSystem.getYawWithCompensation()));
    	    //addSequential(new DriveForTime(0.0, 0.25, .9));
    	    addSequential(new DriveForTimeWithoutPID(0.0, 0.25, 1.8));
    	    addSequential(new MoveContainerLiftForTime(1.0, -0.5));
    	    addSequential(new CloseContainerClamp(2.5));
    	    */
    	    
    	    addSequential(new CloseContainerClamp(3.0));
    	    addSequential(new MoveContainerLiftForTime(2.0, 1.0));
    	    addSequential(new DriveForTime(0.5, 0.0, 1.15));
    	    addSequential(new RotateForTime(2.0, 0.7));
    	    
    	    //addSequential(new MoveToteLiftForTime(2.0, 1.0));
    	    //addSequential(new RotateForTime(1.0, -0.7));
    	    //addSequential(new DriveForTimeWithoutPID(0.0, 1.0, 1.75));
    	    break;
    	
    	case 9:	    
    	    break;
	}
    }
}
