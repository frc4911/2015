package org.usfirst.frc.team4911.robot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;

import org.usfirst.frc.team4911.robot.RobotConstants;


public class Autonomous extends CommandGroup {

	public Autonomous(){
		/***********************************************************
		 * 
		 * 	Drive From Staging Zone Around Scoring Zone to Autozone
		 *
		 ***********************************************************/
		// ======================= STARTING POSITION INSTRUCTIONS ===========================
    	// For this command the robot will slide down the staging zone, into the autonomous
    	// zone, and then back down the autonomous zone. For this the robot must be placed
    	// a certain distance down the staging zone from the left proportional to the parameter
    	// stagingZones 
		
		//What is the Unit?
		double stagingZones = 3.0;
		
		addSequential(new PIDAxisDrive(-0.5, 0.0, RobotConstants.DRIVE_ONE_STAGE_ZONE * stagingZones));
    	addSequential(new SetGoalHeading(90));
    	addSequential(new PIDAxisDrive(0.0, 0.5,  1024.0*30.5*3.0));
    	addSequential(new SetGoalHeading(0));
    	addSequential(new PIDAxisDrive(0.5, 0.0, RobotConstants.DRIVE_ONE_STAGE_ZONE * (2.0-stagingZones)));
    	
    	
    	
    	/***********************************************************
		 * 
		 * 	Drive From Staging Zone Around Scoring Zone to Autozone
		 *
		 ***********************************************************/
    	// ======================= STARTING POSITION INSTRUCTIONS ===========================
    	// For this command the robot tote lift must start in TOTE_ACQUIRE_POSITION ready to
    	// acquire the tote on the FAR LEFT SIDE OF THE FIELD. It will move left and stack on
    	// the next two totes to it's left, giving it a stack of three. It will then drive into
    	// the autonomous zone, deposit the totes, back up slightly, and stop.
    	
        addSequential(new AutoStackCrateLeft());
        addSequential(new AutoStackCrateLeft());

    	addSequential(new PIDAxisDrive(0.1, 0.0, RobotConstants.CLEAR_TOTE_LIP_DISTANCE)); // drives accross right 10 encoder pulses
    	addSequential(new PIDAxisDrive(0.0, 0.5, RobotConstants.FORWARD_DISTANCE_TO_AUTO_ZONE)); // drives forward 500 encoder pulses
    	
    	addSequential(new MoveToteLift(RobotConstants.TOTE_GROUND_POSITION));
    	addSequential(new PIDAxisDrive(0.0, -0.5, RobotConstants.CLEAR_TOTE_LIP_DISTANCE)); // drives backward 10 encoder pulses

    	
    	
    	
	}

}
